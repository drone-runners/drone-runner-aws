#!/usr/bin/env bash
set -e
mkdir /tmp/certs/

echo {{ .CACert | base64 }} | base64 -d >> {{ .CaCertPath }}
chmod 0600 {{ .CaCertPath }}

echo {{ .TLSCert | base64 }} | base64 -d  >> {{ .CertPath }}
chmod 0600 {{ .CertPath }}

echo {{ .TLSKey | base64 }} | base64 -d >> {{ .KeyPath }}
chmod 0600 {{ .KeyPath }}

if wget --retry-connrefused --retry-on-host-error --retry-on-http-error=503,404,429 --tries=3 --waitretry=3 "{{ .LiteEnginePath }}/lite-engine-{{ .Platform.OS }}-{{ .Platform.Arch }}" -O /opt/homebrew/bin/lite-engine; then
    echo "Successfully downloaded lite engine binary from primary URL."
else
    echo "Primary URL failed for lite-engine. Trying fallback URL..."
	if wget --retry-connrefused --retry-on-host-error --retry-on-http-error=503,404,429 --tries=10 --waitretry=3 "{{ .LiteEngineFallbackPath }}/lite-engine-{{ .Platform.OS }}-{{ .Platform.Arch }}" -O /opt/homebrew/bin/lite-engine; then
        echo "Successfully downloaded lite engine binary from fallback URL."
    else
        echo "Failed to download lite-engine from both URLs."
        exit 1
    fi
fi
chmod 777 /opt/homebrew/bin/lite-engine
touch $HOME/.env
echo "SKIP_PREPARE_SERVER=true" >> .env;

{{ if .PluginBinaryURI }}
if wget --retry-connrefused --retry-on-host-error --retry-on-http-error=503,404,429 --tries=3 --waitretry=3 {{ .PluginBinaryURI }}/plugin-{{ .Platform.OS }}-{{ .Platform.Arch }}  -O /usr/local/bin/plugin; then
    echo "Successfully downloaded plugin binary from primary URL."
else
    echo "Primary URL failed for plugin. Trying fallback URL..."
	if wget --retry-connrefused --retry-on-host-error --retry-on-http-error=503,404,429 --tries=10 --waitretry=10 {{ .PluginBinaryFallbackURI }}/plugin-{{ .Platform.OS }}-{{ .Platform.Arch }}  -O /usr/local/bin/plugin; then
        echo "Successfully downloaded plugin binary from fallback URL."
    else
        echo "Failed to download plugin binary from both URLs."
        exit 1
    fi
fi
chmod 777 /usr/local/bin/plugin

{{ if .Tmate.Enabled }}
mkdir /tmp/addon
if wget -nv https://github.com/harness/tmate/releases/download/1.0/tmate-1.0-static-mac-arm64.tar.xz -O /tmp/addon/tmate.xz; then
	echo "Successfully downloaded tmate binary from primary URL."
else
	echo "Primary URL failed for tmate. Trying fallback URL..."
	wget -nv https://app.harness.io/storage/harness-download/harness-ti/harness-tmate/1.0/tmate-1.0-static-mac-arm64.tar.xz -O /tmp/addon/tmate.xz
	echo "Successfully downloaded tmate binary from fallback URL."
fi
tar -xf /tmp/addon/tmate.xz -C /tmp/addon/
chmod 777  /tmp/addon/tmate-1.0-static-mac-arm64/tmate
mv  /tmp/addon/tmate-1.0-static-mac-arm64/tmate /tmp/addon/tmate
{{ end }}

{{ end }}

if curl -fL https://github.com/bitrise-io/envman/releases/download/2.4.2/envman-Darwin-arm64 > /usr/local/bin/envman; then
	echo "Successfully downloaded envman binary from primary URL."
else
	echo "Primary URL failed for envman. Trying fallback URL..."
	curl -fL https://app.harness.io/storage/harness-download/harness-ti/harness-envman/2.4.2/envman-Darwin-arm64 > /usr/local/bin/envman
	echo "Successfully downloaded envman binary from fallback URL."
fi
chmod 777 /usr/local/bin/envman

{{ if .HarnessTestBinaryURI }}
    if wget -nv --retry-connrefused --retry-on-host-error --retry-on-http-error=503,404,429 --tries=10 --waitretry=3 {{ .HarnessTestBinaryURI }}/{{ .Platform.Arch }}/{{ .Platform.OS }}/bin/split_tests-{{ .Platform.OS }}_{{ .Platform.Arch }} -O /usr/local/bin/split_tests; then
        echo "Successfully downloaded split test binary URL."
        chmod 777 /usr/local/bin/split_tests
    else
        echo "Failed to download split test binary"
    fi
{{ end }}

/opt/homebrew/bin/lite-engine server --env-file $HOME/.env > $HOME/lite-engine.log 2>&1 &