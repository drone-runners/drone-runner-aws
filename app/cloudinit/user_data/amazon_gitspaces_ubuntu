#cloud-config
cloud_final_modules:
- [scripts-user, always]
write_files:
- path: {{ .CaCertPath }}
  permissions: '0600'
  encoding: b64
  content: {{ .CACert | base64  }}
- path: {{ .CertPath }}
  permissions: '0600'
  encoding: b64
  content: {{ .TLSCert | base64 }}
- path: {{ .KeyPath }}
  permissions: '0600'
  encoding: b64
  content: {{ .TLSKey | base64 }}
runcmd:
- 'set -x'
- 'ufw allow 9079'
- 'mkdir -p /etc/docker'
- 'mkdir -p /harness/certs'
- 'touch /etc/docker/daemon.json'
- 'echo "{}" > /etc/docker/daemon.json'
- "export SERVER_CERT_FILE={{ .CertPath }}"
- "export SERVER_KEY_FILE={{ .KeyPath }}"
- "export CLIENT_CERT_FILE={{ .CaCertPath }}"
- 'apt-get update'
- 'apt-get install -y wget apt-transport-https ca-certificates curl gnupg lsb-release'
- 'mkdir -p /etc/apt/keyrings'
- 'curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg'
- 'echo "deb [arch={{ .Platform.Arch }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list'
- 'apt-get update'
- 'apt-get install -y docker-ce docker-ce-cli containerd.io'
- '(/usr/bin/wget --retry-connrefused --retry-on-host-error --retry-on-http-error=503,404,429 --tries=3 --waitretry=3 "{{ .LiteEnginePath }}/lite-engine-{{ .Platform.OS }}-{{ .Platform.Arch }}" -O /usr/bin/lite-engine && echo "Successfully downloaded lite engine binary from primary URL.") || (echo "Primary URL failed for lite-engine. Trying fallback URL..." && /usr/bin/wget --retry-connrefused --retry-on-host-error --retry-on-http-error=503,404,429 --tries=10 --waitretry=10 "{{ .LiteEngineFallbackPath }}/lite-engine-{{ .Platform.OS }}-{{ .Platform.Arch }}" -O /usr/bin/lite-engine && echo "Successfully downloaded lite engine binary from fallback URL.")'
- 'chmod 777 /usr/bin/lite-engine'
{{ if eq .Platform.Arch "amd64" }}
- '(curl -fL https://github.com/bitrise-io/envman/releases/download/2.4.2/envman-Linux-x86_64 > /usr/bin/envman && echo "Successfully downloaded envman binary from primary URL.") || (echo "Primary URL failed for envman. Trying fallback URL..." && curl -fL https://app.harness.io/storage/harness-download/harness-ti/harness-envman/2.4.2/envman-Linux-x86_64 > /usr/bin/envman && echo "Successfully downloaded envman binary from fallback URL.")'
- 'chmod 777 /usr/bin/envman'
{{ end }}
- 'touch /root/.env'
- '[ -f "/etc/environment" ] && cp "/etc/environment" /root/.env'
{{ if .GitspaceAgentConfig.VMInitScript }}
- | 
{{ .GitspaceAgentConfig.VMInitScript }}
{{ end }}
- '/usr/bin/lite-engine server --env-file /root/.env > {{ .LiteEngineLogsPath }} 2>&1 &'