#cloud-config
cloud_final_modules:
- [scripts-user, always]
packages:
- wget
- docker
- git
write_files:
- path: {{ .CaCertPath }}
  permissions: '0600'
  encoding: b64
  content: {{ .CACert | base64  }}
- path: {{ .CertPath }}
  permissions: '0600'
  encoding: b64
  content: {{ .TLSCert | base64 }}
- path: {{ .KeyPath }}
  permissions: '0600'
  encoding: b64
  content: {{ .TLSKey | base64 }}
runcmd:
- yum install -y wget docker git
- systemctl enable docker
- systemctl start docker
- "export SERVER_CERT_FILE={{ .CertPath }}"
- "export SERVER_KEY_FILE={{ .KeyPath }}"
- "export CLIENT_CERT_FILE={{ .CaCertPath }}"
- 'sudo service docker start'
- 'sudo usermod -a -G docker ec2-user'
- 'wget --retry-connrefused --retry-on-host-error --retry-on-http-error=503,404,429 --tries=10 --waitretry=10 "{{ .LiteEnginePath }}/lite-engine-{{ .Platform.OS }}-{{ .Platform.Arch }}" -O /usr/bin/lite-engine || wget --retry-connrefused --tries=10 --waitretry=10 "{{ .LiteEnginePath }}/lite-engine-{{ .Platform.OS }}-{{ .Platform.Arch }}" -O /usr/bin/lite-engine'
- 'chmod 777 /usr/bin/lite-engine'
{{ if .HarnessTestBinaryURI }}
- 'wget -nv "{{ .HarnessTestBinaryURI }}/{{ .Platform.Arch }}/{{ .Platform.OS }}/bin/split_tests-{{ .Platform.OS }}_{{ .Platform.Arch }}" -O /usr/bin/split_tests'
- 'chmod 777 /usr/bin/split_tests'
{{ end }}
{{ if .PluginBinaryURI }}
- 'wget --retry-connrefused --retry-on-host-error --retry-on-http-error=503,404,429 --tries=10 --waitretry=10 {{ .PluginBinaryURI }}/plugin-{{ .Platform.OS }}-{{ .Platform.Arch }}  -O /usr/bin/plugin || wget --retry-connrefused --tries=10 --waitretry=10 {{ .PluginBinaryURI }}/plugin-{{ .Platform.OS }}-{{ .Platform.Arch }}  -O /usr/bin/plugin'
- 'chmod 777 /usr/bin/plugin'
{{ end }}
{{ if .AutoInjectionBinaryURI }}
- 'wget --retry-connrefused --retry-on-host-error --retry-on-http-error=503,404,429 --tries=10 --waitretry=10 -nv "{{ .AutoInjectionBinaryURI }}/{{ .Platform.OS }}/{{ .Platform.Arch }}/auto-injection" -O /usr/bin/auto-injection || wget --retry-connrefused --tries=10 --waitretry=10 -nv "{{ .AutoInjectionBinaryURI }}/{{ .Platform.OS }}/{{ .Platform.Arch }}/auto-injection" -O /usr/bin/auto-injection'
- 'chmod 777 /usr/bin/auto-injection'
{{ end }}
{{ if eq .Platform.Arch "amd64" }}
- 'curl -fL https://github.com/bitrise-io/envman/releases/download/2.4.2/envman-Linux-x86_64 > /usr/bin/envman'
- 'chmod 777 /usr/bin/envman'
{{ end }}
- 'touch /root/.env'
- '[ -f "/etc/environment" ] && cp "/etc/environment" /root/.env'
- '[ -f "/root/.env" ] && ! grep -q "^HOME=" /root/.env && echo "HOME=/root" >> /root/.env'
{{ if .Tmate.Enabled }}
- 'mkdir /addon'
{{ if eq .Platform.Arch "amd64" }}
- 'wget https://github.com/harness/tmate/releases/download/1.0/tmate-1.0-static-linux-amd64.tar.xz  -O /addon/tmate.xz'
- 'tar -xf /addon/tmate.xz -C /addon/'
- 'chmod 777  /addon/tmate-1.0-static-linux-amd64/tmate'
- 'mv  /addon/tmate-1.0-static-linux-amd64/tmate /addon/tmate'
- 'rm -rf /addon/tmate-1.0-static-linux-amd64/'
{{ else if eq .Platform.Arch "arm64" }}
- 'wget https://github.com/harness/tmate/releases/download/1.0/tmate-1.0-static-linux-arm64v8.tar.xz -O /addon/tmate.xz'
- 'tar -xf /addon/tmate.xz -C /addon/'
- 'chmod 777  /addon/tmate-1.0-static-linux-arm64v8/tmate'
- 'mv  /addon/tmate-1.0-static-linux-arm64v8/tmate /addon/tmate'
- 'rm -rf /addon/tmate-1.0-static-linux-arm64v8/'
{{ end }}
- 'rm -rf /addon/tmate.xz'
{{ if .GitspaceAgentConfig.VMInitScript }}
- |
{{ .GitspaceAgentConfig.VMInitScript }}
{{ end }}
- '/usr/bin/lite-engine server --env-file /root/.env > {{ .LiteEngineLogsPath }} 2>&1 &'
{{ end }}