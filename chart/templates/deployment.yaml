apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.name}}
  namespace: {{.Values.namespace.name}}
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: {{.Values.name}}
    meta.helm.sh/release-namespace: {{.Values.namespace.name}}
spec:
  replicas: {{int .Values.replicas}}
  selector:
    matchLabels:
      app: {{.Values.name}}
  template:
    metadata:
      labels:
        app: {{.Values.name}}
    spec:
      terminationGracePeriodSeconds: 120
      initContainers:
      - name: init-script
        image: mongo:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "updating global delegate settings";
          mongo --host=mongo-replicaset.<+pipeline.variables.Namespace>.svc.cluster.local:27017/harness --eval "db.accounts.update({ _id: '__GLOBAL_DELEGATE_ACCOUNT_ID__'}, { \$set: { companyName: 'harness', accountName: 'HarnessGlobalDelegate', accountKey: '2f6b0988b6fb3370073c3d0505baee59', globalDelegateAccount: true, isProductLed: true }}, { upsert: true })"
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: password
      containers:
      - name: dlite
        image: {{.Values.image}}
        imagePullPolicy: Always
        resources:
          limits:
            memory: {{.Values.memory}}
            cpu: {{.Values.cpu | quote}}
          requests:
            memory: {{.Values.memory}}
            cpu: {{.Values.cpu | quote}}
        command: ["/bin/drone-runner-aws", "dlite", "--pool=/etc/config/pool.yml"]
        env:
        - name: DLITE_NAME
          value: {{.Values.dlite.linux_name}}
        - name: DLITE_ACCOUNT_ID
          value: {{.Values.dlite.accountId | quote}}
        - name: DLITE_ACCOUNT_SECRET
          value: {{.Values.dlite.accountSecret | quote}}
        - name: DLITE_MANAGER_ENDPOINT
          value: {{.Values.dlite.managerEndpoint}}
        - name: DLITE_PARALLEL_WORKERS
          value: {{.Values.dlite.parallelWorkers | quote}}
        - name: DLITE_POLL_INTERVAL_MILLISECS
          value: {{.Values.dlite.pollIntervalMs | quote}}
        - name: SKIP_PREPARE_SERVER
          value: "true"
        - name: DRONE_TRACE
          value: "true"
        - name: DRONE_LITE_ENGINE_PATH
          value: https://storage.googleapis.com/harness-ti/local
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{int .Values.port}}
          initialDelaySeconds: 60
          timeoutSeconds: 5
          periodSeconds: 5
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{int .Values.port}}
          initialDelaySeconds: 60
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 10
        volumeMounts:
        - name: pool-cfg
          mountPath: /etc/config
        - name: service-account
          mountPath: /var/run/secret/cloud.google.com
          readOnly: true
      volumes:
        - name: pool-cfg
          configMap:
            name: {{.Values.name}}
            items:
            - key: pool
              path: pool.yml
        - name: service-account
          secret:
            secretName: service-account-{{.Values.name}}
            optional: false
